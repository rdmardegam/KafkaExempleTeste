info.app.name:@project.name@
spring.application.name=kafkaApplicationProducer

server.port=8081

# Kafka
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.bootstrap.servers=pkc-4yyd6.us-east1.gcp.confluent.cloud:9092
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='PFYRYI3QEVROLNUA'   password='4pXanlhNHFwIo1O4aoyU0AgALsJcOK3+dNtSeRFOzN12gt0UyQSICeoHbNGdLvBr';
#spring.kafka.properties.security.protocol=SASL_SSL
# Confluent Cloud Schema Registry
#spring.kafka.properties.basic.auth.credentials.source=USER_INFO
#spring.kafka.properties.basic.auth.user.info=LA2EO2CREYMPOOTK:jywk3SzTh4hsFTzDeW1WOpQ0zqkukfCOgproPgwNNKqCPPUkDnFdUXoYCGuL+FgU
#spring.kafka.properties.schema.registry.url=https://psrc-0xx5p.us-central1.gcp.confluent.cloud



spring.kafka.properties.bootstrap.servers=localhost:9092
spring.kafka.max.block.ms=10

#spring.kafka.ackOnError

#KAFKA PRODUCER 
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#KAFKA COMSUMER
spring.kafka.consumer.group-id=consumer_group1
spring.kafka.consumer.client-id=consumer_group1

spring.kafka.consumer.enable-auto-commit=false
#earliest = come�o | latest = so msgs apos plug 
spring.kafka.consumer.auto-offset-reset=latest
# Commit por lote ... manual_immediate=commita uma a uma
spring.kafka.listener.ack-mode=manual

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#spring.kafka.consumer.maxAttempts=200

#spring.kafka.listener.type:batch
#spring.kafka.consumer.fetch-max-wait=30000
spring.kafka.consumer.fetch-min-size=20
spring.kafka.consumer.max-poll-records=10
 

spring.jackson.serialization.write_dates_as_timestamps=false 

 
########CIRCUITE
# Deve ser o mesmo resilience4j.circuitbreaker.instances.masterCircuit.waitDurationInOpenState
time.circuite.open=20 

# % de falha
resilience4j.circuitbreaker.instances.masterCircuit.failureRateThreshold:30
# Tipo de contagem
resilience4j.circuitbreaker.instances.masterCircuit.slidingWindowType: COUNT_BASED
# Qndade de chamada que é considerada para abrir
resilience4j.circuitbreaker.instances.masterCircuit.slidingWindowSize: 50
# Qntidade minima de chamadas para o circuito começar a abrir
resilience4j.circuitbreaker.instances.masterCircuit.minimumNumberOfCalls: 15
# Tempo da transição de aberto para semi fechado
resilience4j.circuitbreaker.instances.masterCircuit.waitDurationInOpenState: 20s

# Qnt de chamadas qndo cicuito meio aberto
resilience4j.circuitbreaker.instances.masterCircuit.permittedNumberOfCallsInHalfOpenState: 5

# Exception contabilizadas e ignoradas
resilience4j.circuitbreaker.instances.masterCircuit.recordExceptions=com.example.kafka.producer.exception.TechnicalException 
resilience4j.circuitbreaker.instances.masterCircuit.ignoreExceptions=com.example.kafka.producer.exception.BusinessException

resilience4j.circuitbreaker.instances.masterCircuit.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.masterCircuit.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.masterCircuit.automaticTransitionFromOpenToHalfOpenEnabled: true


 
##### RETRY
resilience4j.retry.instances.masterCircuit.maxAttempts=2
resilience4j.retry.instances.masterCircuit.waitDuration=200ms
resilience4j.retry.instances.masterCircuit.enableExponentialBackoff=true
resilience4j.retry.instances.masterCircuit.exponentialBackoffMultiplier=1
resilience4j.retry.instances.masterCircuit.retryExceptions:com.example.kafka.producer.exception.TechnicalException
resilience4j.retry.instances.masterCircuit.ignoreExceptions:com.example.kafka.producer.exception.BusinessException
 


### ACTUATOR E MICROMITER
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=mappings,beans,startup,env,scheduledtasks,caches,metrics

management.endpoint.health.enabled=true
management.endpoint.loggers.enabled=true

############CERTIFICADO MASTER##############
certificadoMaster.fileCertificateLocation=./keyalias-sandbox.p12
certificadoMaster.signingKeyAlias=keyalias
certificadoMaster.signingKeyPassword=keystorepassword1
certificadoMaster.consumerKey=6ynVPNsWkA59SZXvieIRJ7tbapzylu9jxaq3te4re9dca799!5f9bae87b9fa4b6faee7cfacfdce5e9f0000000000000000

############INFOS MASTER CARD##############
#216-Google | 217-Samsung | 618-Whatsapp | 103-Apple|
master.walletsToProcess=618
master.base.url=https://sandbox.api.mastercard.com/mdes/csapi/v2



